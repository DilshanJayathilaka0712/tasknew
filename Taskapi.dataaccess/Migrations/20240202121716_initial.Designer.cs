// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taskapi.dataaccess;

#nullable disable

namespace Taskapi.dataaccess.Migrations
{
    [DbContext(typeof(Tododbcontext))]
    [Migration("20240202121716_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tasknew.modles.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Due")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 2, 2, 17, 47, 15, 955, DateTimeKind.Local).AddTicks(4327),
                            Description = "get some text books for school",
                            Due = new DateTime(2024, 2, 7, 17, 47, 15, 955, DateTimeKind.Local).AddTicks(4338),
                            Status = 0,
                            Title = "Get books for school-DB"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 2, 2, 17, 47, 15, 955, DateTimeKind.Local).AddTicks(4344),
                            Description = "get vegetable for week",
                            Due = new DateTime(2024, 2, 4, 17, 47, 15, 955, DateTimeKind.Local).AddTicks(4345),
                            Status = 0,
                            Title = "Get Vegetable"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 2, 2, 17, 47, 15, 955, DateTimeKind.Local).AddTicks(4346),
                            Description = "Wter the plant quickly",
                            Due = new DateTime(2024, 2, 3, 17, 47, 15, 955, DateTimeKind.Local).AddTicks(4347),
                            Status = 0,
                            Title = "Water the plants"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
